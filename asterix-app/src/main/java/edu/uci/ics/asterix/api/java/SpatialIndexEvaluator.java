package edu.uci.ics.asterix.api.java;

import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Random;

import org.apache.http.HttpResponse;

import edu.uci.ics.hyracks.api.util.StopWatch;

public class SpatialIndexEvaluator {

    private static double circleRadius = 0.00000025; // around 25mm
    private static final double RECTANGLE_MIN_SIZE = 0.001; // around 0.1km
    private static final double RECTANGLE_MAX_SIZE = 0.1; // around 10km
    private static final double CIRCLE_MIN_RADIUS = 0.0005; // around 0.1km
    private static final double CIRCLE_MAX_RADIUS = 0.05; // around 10km
    //    private static final double RECTANGLE_MIN_SIZE = 0.1; // around 10km
    //    private static final int RECTANGLE_MAX_SIZE = 1; // around 100km
    //    private static final double CIRCLE_MIN_RADIUS = 0.05; // around 10km
    //    private static final double CIRCLE_MAX_RADIUS = 0.5; // around 100km
    // private static final double RECTANGLE_MIN_SIZE = 1.0; //around 10km
    // private static final int RECTANGLE_MAX_SIZE = 10; //around 100km
    // private static final double CIRCLE_MIN_RADIUS = 0.5; //around 10km
    // private static final double CIRCLE_MAX_RADIUS = 5.0; //around 100km
    private static int numQuery = 200;
    private static int flipFlag = 0;
    private static StopWatch sw = new StopWatch();
    private static Random rand;
    private static String datasetName;
    private static int coordCircleIdx = 0;
    private static int coordRectangleIdx = 500;
    private static boolean randomQuery = false;
    private static String ipAddress = "127.0.0.1";
    private static String portNum = "19002";
    private static String admFilePath;
    private static String indexType;
    private static String workType;

    /* 1000 points returned from the following AQL query:
     * use dataverse STBench;
     * for $x in dataset FsqCheckinTweet
     * where $x.id % int64("30000") = 0 and $x.coordinates != point("0.0, 0.0")
     * return $x.coordinates
     */
//    public static final double[][] coordinates = new double[][] { { 4.63846207, 52.38801579 },
//            { 139.75806713, 35.69596587 }, { 100.516918, 13.731941 }, { -90.283015, 38.6172071 },
//            { -93.186925, 44.955036 }, { 121.4655, 31.221638 }, { 106.9388118, -6.6619518 },
//            { -121.631053, 39.138464 }, { 100.52798, 13.903992 }, { 107.57597923, -6.88233157 },
//            { 4.4682701, 51.9203498 }, { 106.9642236, -6.3598991 }, { 106.848848, -6.370327 },
//            { -115.153374, 36.090084 }, { -121.9325274, 37.7006789 }, { -88.943327, 40.499382 },
//            { 112.7343607, -7.30909151 }, { -70.54922, -33.39624 }, { -76.450096, 39.334255 },
//            { -73.991673, 40.740502 }, { -90.138603, 42.977175 }, { -85.08708358, 35.11342311 },
//            { -73.9908529, 40.703371 }, { 127.1215228, 37.3840308 }, { 139.57341313, 35.57918093 },
//            { -91.62631989, 42.02341088 }, { 128.600716, 34.8966188 }, { 139.770883, 35.69169 },
//            { -115.14993668, 36.08505482 }, { 126.98221207, 37.56478644 }, { -1.8926081, 52.4368507 },
//            { -100.80391645, 20.51977483 }, { -96.7843407, 32.7845673 }, { -96.8169379, 32.953092 },
//            { 98.968631, 18.7996616 }, { -86.1260104, 39.6346481 }, { -73.96353364, 40.7791847 },
//            { 139.67080951, 35.28020005 }, { 103.908833, 1.30156 }, { 153.10963154, -27.4036613 },
//            { 11.95861, 51.49272 }, { 139.601196, 35.453296 }, { 135.516494, 34.738841 }, { 101.487191, 0.478416 },
//            { 4.9213875, 52.358913 }, { 106.911488, -6.214297 }, { 103.70531559, 1.33974195 },
//            { -73.9122666, 40.6131826 }, { 101.281543, 6.541701 }, { -3.19997, 51.509121 },
//            { 139.7161538, 35.5622595 }, { 103.82263005, 1.26318592 }, { 100.591416, 13.841061 },
//            { 106.80315971, -6.22486225 }, { 4.6365368, 52.3769405 }, { -83.059006, 42.397758 },
//            { 106.8270734, -6.1747565 }, { 100.5365324, 13.72921315 }, { 10.4080453, 53.2470853 },
//            { -84.313839, 34.040604 }, { -77.399223, 34.785097 }, { 103.774119, 1.376298 },
//            { 103.85775089, 1.30959789 }, { 28.298083, -26.162455 }, { 127.13697553, 35.84069908 },
//            { -85.7589743, 38.2164699 }, { 126.9509697, 37.54563214 }, { -8.4649241, 51.8976688 },
//            { -0.08216, 51.5017 }, { -86.66917384, 36.13151464 }, { -79.9992068, 40.4420024 },
//            { 106.948653, -6.257145 }, { 100.307008, 5.33468 }, { 101.144741, 4.326149 }, { -1.54920101, 53.79360414 },
//            { -73.187335, 44.486477 }, { 107.61597, -6.880915 }, { 144.80469704, 13.49330125 },
//            { -122.26084024, 37.87235928 }, { 139.7332755, 35.6702911 }, { -70.6009038, -33.4129208 },
//            { 2.0835029, 41.4707305 }, { 110.399867, -7.75756 }, { -73.988, 40.7639 }, { -3.642742, 51.604072 },
//            { 126.98205, 37.585186 }, { 121.47834063, 31.2774539 }, { -46.6620054, -23.6017438 },
//            { -77.216074, 38.861829 }, { 106.845172, -6.211544 }, { 8.274804, 49.995993 }, { -77.0624599, 39.1509086 },
//            { -83.7407887, 42.2778632 }, { 126.92969978, 37.48420868 }, { 12.71388531, 56.04167481 },
//            { -71.0625356, 42.3537268 }, { 106.668453, -6.296538 }, { 6.01467133, 50.86269015 },
//            { -3.7019691, 40.4282607 }, { 110.345825, -7.696005 }, { 129.350814, 35.486061 },
//            { -1.893592, 52.4829614 }, { 103.997583, 1.133458 }, { -73.985628, 40.732939 },
//            { 127.00025797, 37.49829942 }, { -70.14888525, -20.21374716 }, { 139.92676735, 35.72320724 },
//            { 9.386478, 52.1027671 }, { 100.526756, 13.739677 }, { -111.930884, 33.418839 }, { -91.6069, 41.728 },
//            { -70.5954343, -33.4165703 }, { -84.212821, 33.714393 }, { 100.54069519, 13.74467932 },
//            { 135.496407, 34.704367 }, { 106.780473, -6.206535 }, { -0.01381874, 51.46545121 },
//            { 126.992942, 37.488934 }, { 127.12763071, 37.52343524 }, { 4.87471104, 52.38576325 },
//            { -118.5363476, 34.2420637 }, { 106.888095, -6.152251 }, { 106.8783167, -6.1759553 },
//            { 18.09089899, 59.33382419 }, { -0.4122448, 51.87797462 }, { -95.3625504, 29.7246184 },
//            { -111.772355, 33.225555 }, { 106.808181, -6.601558 }, { -51.2223205, -30.0247672 },
//            { -79.3919539, 43.6488351 }, { 102.260176, -3.793191 }, { 106.758253, -6.3048 }, { -73.965089, 40.76174 },
//            { -70.6494769, -33.4484597 }, { 121.55758381, 31.20318471 }, { -84.3809, 33.8428 },
//            { -5.66411734, 40.96500928 }, { -75.54787159, 39.8125579 }, { 106.797924, -6.184158 },
//            { 28.97408009, 41.03100308 }, { 101.59852088, 3.0953985 }, { -80.264536, 25.994659 },
//            { -122.25766182, 37.8047658 }, { 121.8008709, 31.14884273 }, { 100.42690516, 13.67097657 },
//            { -73.7901207, 42.6653093 }, { -87.669205, 41.9855987 }, { 124.856143, 1.48715008 },
//            { 115.77332497, -31.7544082 }, { 106.617347, -6.204364 }, { 115.16796112, -8.72896287 },
//            { 101.584318, 3.044211 }, { 106.888328, -6.142832 }, { -118.412, 34.0161 }, { -86.09912395, 39.92645678 },
//            { 139.399308, 35.95842 }, { -118.50334168, 34.27260916 }, { 129.3538795, 36.0117355 },
//            { -80.19313574, 25.8072089 }, { -2.207366, 51.319855 }, { 101.546244, 3.043372 },
//            { 127.074802, 37.550805 }, { 5.9708165, 52.2107454 }, { 119.444094, -5.139714 }, { 114.593894, -3.316551 },
//            { 101.62696838, 3.13074605 }, { 11.96839, 51.483 }, { 116.355313, 40.082232 },
//            { -0.09964943, 51.51338981 }, { 107.617773, -6.875229 }, { 139.702513, 35.683748 },
//            { 101.6773945, 3.1176575 }, { 110.38228601, -7.75642164 }, { 113.993925, 4.39706 },
//            { 106.908702, -6.254349 }, { -81.6537562, 30.3475462 }, { 110.353018, 1.557469 },
//            { -47.983106, -15.866935 }, { 145.081534, -37.863642 }, { 116.106812, 6.115168 },
//            { 103.82213116, 1.26444088 }, { -122.2141218, 37.71329 }, { 11.161196, 49.536068 },
//            { -62.436811, -33.230748 }, { 101.6158417, 3.14815 }, { 103.832832, 1.417458 }, { -96.796534, 32.781616 },
//            { 139.878939, 35.635285 }, { 107.599037, -6.882614 }, { -77.00665, 38.926798 },
//            { -111.9880199, 41.1668743 }, { -76.9096577, 38.8534181 }, { 103.8237997, 1.2546994 },
//            { -3.7019691, 40.4282607 }, { 111.40286, -7.40219 }, { -117.2435577, 32.7991706 },
//            { -121.912634, 37.470812 }, { -122.59609222, 45.58851564 }, { -48.4938304, -27.4614928 },
//            { 0.26016891, 51.88963473 }, { 100.60051918, 13.70503218 }, { 100.29922128, 5.33095514 },
//            { 103.921646, 1.325241 }, { -44.0664462, -22.5420616 }, { 107.431814, -6.54004 },
//            { -112.133594, 33.626096 }, { 127.79942214, 26.3350329 }, { 106.83991671, -6.22492625 },
//            { 106.80900693, -6.58029807 }, { -0.4609554, 51.8984439 }, { 4.893861, 52.379453 },
//            { 100.63304901, 14.88527619 }, { -87.63283253, 41.88445134 }, { -46.6891642, -23.5227824 },
//            { 99.86371143, 19.92531714 }, { 135.90338677, 34.96708903 }, { -73.989937, 40.723047 },
//            { 135.323256, 34.771959 }, { 130.3969565, 33.58798066 }, { 101.45172, 0.52822 },
//            { -84.49638605, 39.09504701 }, { 127.081111, 37.227779 }, { -121.76233292, 38.54558099 },
//            { 121.5681088, 31.11368744 }, { 2.157721, 41.399916 }, { 139.7747378, 35.7072935 },
//            { -118.40502262, 33.94389398 }, { 103.78446, 1.43102 }, { 129.0776825, 35.21235139 },
//            { 106.74839973, -6.19673637 }, { -73.95266533, 40.76507143 }, { 106.84118271, -6.35419836 },
//            { 106.78011417, -6.21030887 }, { 106.182041, -6.11772 }, { -8.8982986, 51.6213087 },
//            { -115.17654419, 36.10736936 }, { 127.02504158, 37.60340326 }, { 101.670699, 2.901119 },
//            { -73.24726, -39.846921 }, { 6.9361845, 50.9364976 }, { -73.99150372, 40.73001497 },
//            { 106.86684609, -6.22494758 }, { 4.8642844, 52.0806777 }, { 2.156766, 41.39876 },
//            { 100.58366275, 14.06832714 }, { 121.52906, 25.043604 }, { -66.05512619, 18.45461591 },
//            { 139.6174736, 35.4955877 }, { 6.1762342, 49.109891 }, { 114.589203, -3.328499 },
//            { -79.71542358, 43.43556365 }, { 100.36710262, -0.94006135 }, { 100.83679497, 13.61229806 },
//            { -0.328388, 53.768113 }, { 9.1454249, 45.4815207 }, { -46.65969, -23.61055 },
//            { 139.59175676, 35.52097335 }, { 120.9414053, 14.41261044 }, { 139.719191, 35.802517 },
//            { 124.922014, 1.543275 }, { -76.632096, 39.285723 }, { -125.272606, 50.0587197 },
//            { 131.53250456, 32.15230739 }, { -104.993689, 39.74171 }, { -117.83913, 33.649502 },
//            { 107.9096501, -7.2484175 }, { 106.733589, -6.558766 }, { -79.2870525, 45.0557166 },
//            { -76.490038, 39.336308 }, { 106.792999, -6.589166 }, { 112.741358, -7.267858 },
//            { 106.8400365, -6.206799 }, { -51.17796421, -29.98965707 }, { -52.1113, -21.770482 },
//            { 103.776652, 1.333653 }, { -72.8932922, 42.9686702 }, { 107.55738, -6.87839 },
//            { -46.6385802, -23.5619035 }, { -73.35502625, 41.14159462 }, { -117.995222, 34.0102392 },
//            { 106.8144424, -6.3014537 }, { 139.39094782, 35.62140747 }, { -76.819829, 40.548006 },
//            { 36.8225206, -1.2859673 }, { -73.9882743, 40.7289538 }, { -90.346322, 38.509077 },
//            { 107.107711, -6.199216 }, { -122.085045, 37.6730938 }, { 28.97455215, 41.00827305 },
//            { -122.34786987, 47.62045474 }, { 103.9361477, 1.3806438 }, { 100.306511, 5.3336865 },
//            { -88.515815, 36.141685 }, { -73.98250759, 40.76358436 }, { -86.700482, 33.423466 },
//            { 127.015501, 35.77626 }, { -49.05932486, -11.72693968 }, { 130.40167451, 33.5819655 },
//            { -103.446276, 20.584879 }, { 103.78589, 1.31766 }, { -70.9753497, 42.567612 },
//            { -90.6392901, 38.3543499 }, { -73.8273649, 40.7573212 }, { -122.21261144, 37.71226741 },
//            { 127.0376719, 37.2605222 }, { 127.040975, 37.522941 }, { -81.0489883, 34.0048179 },
//            { -73.99240494, 40.7340881 }, { -46.6826446, -23.5906564 }, { 100.577571, 13.994095 },
//            { 121.5596813, 25.05119158 }, { -79.95948851, -3.25625737 }, { -88.188302, 41.709889 },
//            { 107.601276, -6.91304 }, { 139.75388288, 35.70640354 }, { 30.34343362, 59.927829 },
//            { 98.62551212, 3.55702573 }, { -0.1742404, 51.5148 }, { -87.0331591, 35.6009679 },
//            { -46.6671373, -23.5250081 }, { -88.73382568, 41.86761138 }, { 106.8142351, -6.1360883 },
//            { 126.980451, 37.570167 }, { 107.6098111, -6.9147444 }, { -119.761225, 36.867406 },
//            { -74.0063525, 40.7344913 }, { 128.59438, 35.877445 }, { -43.2038347, -22.9853568 },
//            { 98.675598, 3.585242 }, { -71.454492, 42.9705118 }, { -46.323793, -23.985538 }, { -82.837056, 34.682874 },
//            { 121.038776, 14.41914 }, { -121.505907, 38.637096 }, { 139.5427042, 35.6533613 },
//            { -66.88322067, 10.43337119 }, { 24.928978, 60.1784113 }, { -58.460841, -34.573957 },
//            { -87.67802238, 41.95333067 }, { 106.8436343, -6.2962158 }, { -87.9048254, 43.0494715 },
//            { -81.425896, 30.348734 }, { -99.2038292, 19.4241644 }, { -117.8341331, 33.8619575 },
//            { 121.015848, 14.554001 }, { -70.715978, -33.457517 }, { -84.38551426, 33.78945553 },
//            { -118.3187402, 34.1053724 }, { 121.0182565, 14.5516361 }, { 106.80337429, -6.22460628 },
//            { -89.20578, 42.918293 }, { 98.675598, 3.585242 }, { -70.6302508, -33.4409757 }, { 5.120767, 52.094501 },
//            { -83.2893, 30.8677 }, { 110.35072, 1.557298 }, { -90.563735, 38.7909992 }, { -96.70166, 40.814143 },
//            { 23.34704161, 42.65184205 }, { 106.97196, -6.279312 }, { 110.382359, -7.751138 },
//            { -104.3526742, 19.0946551 }, { 106.81507, -6.297883 }, { -87.623861, 41.889556 },
//            { 106.830983, -6.220482 }, { 5.171992, 52.300277 }, { -3.792656, 40.466034 }, { 103.932408, 1.324855 },
//            { -119.772393, 39.50676 }, { -80.23388889, 36.12111111 }, { 5.48925877, 50.98166816 },
//            { 10.203448, 52.911406 }, { 76.747225, 30.682569 }, { -76.141426, 42.058999 }, { 110.822701, -7.571654 },
//            { -73.9952768, 40.748836 }, { -118.45474, 34.044621 }, { 103.848419, 1.342324 }, { 11.57658, 49.94581 },
//            { 24.10486221, 56.95712092 }, { -122.394529, 37.765043 }, { 106.70627832, -6.35880472 },
//            { 5.2782011, 52.39435373 }, { 106.84350014, -6.12252678 }, { -46.65996552, -23.62549549 },
//            { -3.69207144, 40.44647759 }, { 106.642533, -6.173933 }, { 106.88137293, -6.10970412 },
//            { 7.2882009, 43.7114114 }, { 37.6238201, 55.7290413 }, { -73.97375822, 40.75671743 },
//            { -122.0866, 37.925541 }, { -112.508617, 45.968035 }, { 127.030277, 37.485093 },
//            { 100.7154419, 13.8769819 }, { 106.82693, -6.22394 }, { 113.70856, -8.183779 },
//            { -118.0116011, 33.7738862 }, { -94.653231, 39.253195 }, { -117.438124, 47.716547 },
//            { 126.973169, 37.560449 }, { 103.778335, 1.300066 }, { 119.426339, -5.143662 }, { -74.006066, 40.7405139 },
//            { -104.8500824, 39.58253942 }, { -86.780452, 36.1528599 }, { 100.53432226, 13.7461175 },
//            { 8.67247, 50.1112 }, { -86.84052, 36.140813 }, { 126.843125, 37.542017 }, { -73.9883, 40.7491 },
//            { -34.8819873, -8.0906458 }, { 120.758606, 30.763923 }, { 128.597685, 35.867373 },
//            { 100.02938, 16.712879 }, { 101.622191, 3.124782 }, { -84.295782, 33.272584 }, { 2.542616, 50.728023 },
//            { -73.959625, 40.656109 }, { -122.09502339, 37.42071955 }, { -87.95188665, 42.57914029 },
//            { -117.855518, 33.777811 }, { -2.9884302, 53.4059109 }, { -74.137225, 40.624393 }, { 103.80222, 1.27671 },
//            { 106.768844, -6.260213 }, { 110.840405, -6.812123 }, { 101.661509, 3.066002 },
//            { 110.8159841, -7.5747001 }, { 101.590581, 3.07633 }, { 106.792999, -6.589166 },
//            { -0.12277544, 51.51196094 }, { -89.652413, 39.808848 }, { 100.78119278, 13.7309224 },
//            { 106.631401, -6.187381 }, { -51.2079298, -30.0289007 }, { -122.4100315, 37.7857896 },
//            { -118.35753679, 34.07219539 }, { -93.2941676, 44.9589506 }, { 60.6144222, 56.8655255 },
//            { -76.93360806, 40.30443629 }, { -81.274015, 42.990491 }, { 110.3915, -7.775905 },
//            { 128.099991, 35.156006 }, { 104.736822, -2.985073 }, { -46.6403335, -23.5626924 },
//            { 106.8307019, -6.3804009 }, { -46.68940544, -23.60032931 }, { 4.745429, 52.3815604 },
//            { -73.4183976, 41.0989751 }, { 106.8714894, -6.2546754 }, { 9.4468187, 45.0631279 },
//            { -84.05985117, 35.92645164 }, { -75.3932938, 40.0906538 }, { 106.856077, -6.202557 },
//            { 139.63203013, 35.77757065 }, { -38.509078, -13.007356 }, { -80.382946, 25.781954 },
//            { 133.19806667, 34.40673333 }, { 139.69978809, 35.69034569 }, { -122.415362, 37.792882 },
//            { 100.511013, 13.800475 }, { -71.327113, -34.399889 }, { 100.51090389, 13.72428335 },
//            { 101.700355, 2.927244 }, { 139.7408554, 35.62583341 }, { 107.90519, -7.222056 },
//            { -81.58121109, 28.4176358 }, { -77.235546, 39.812877 }, { 100.40705, 5.39974 },
//            { 110.34216285, 1.48718225 }, { -123.9343176, 49.1636655 }, { -106.629326, 35.072574 },
//            { -93.283689, 44.972586 }, { 126.807733, 37.556426 }, { 100.547956, 13.739624 }, { 106.792999, -6.589166 },
//            { 106.656784, -6.114872 }, { -91.345044, 40.826301 }, { -2.940828, 54.8967639 },
//            { -79.30652618, 43.82598213 }, { -94.695454, 38.99235 }, { 100.408117, 13.713995 },
//            { 112.758114, -7.263357 }, { 110.39006012, -7.04664506 }, { 18.537661, -33.916735 },
//            { 106.821599, -6.209712 }, { 103.82887959, 1.30680376 }, { 19.0415277, 47.4831607 },
//            { 100.664852, 13.820876 }, { -3.00467491, 43.29419986 }, { -118.1376493, 33.79137258 },
//            { 3.8153641, 51.4729728 }, { -105.4891878, 39.8000053 }, { 119.556217, -5.053514 },
//            { -73.9854422, 40.7573356 }, { -72.574175, 40.875285 }, { 106.882352, -6.199612 },
//            { 101.61546707, 3.15071457 }, { -0.629381, 51.471932 }, { -70.6861201, -33.4508832 },
//            { -47.891189, -15.755323 }, { -121.962717, 38.3692449 }, { -98.043264, 20.179223 },
//            { 127.743461, 37.870278 }, { 110.39731979, -7.05268259 }, { -84.310113, 33.685163 },
//            { 9.1843537, 45.4771974 }, { -121.86138153, 37.25055409 }, { 139.68291163, 35.69792631 },
//            { 106.81606, -6.149599 }, { -88.2434934, 40.1169151 }, { -70.64118, -33.42862 }, { 103.613072, 1.368597 },
//            { 110.2772576, -7.6659948 }, { -79.89534616, -2.16599107 }, { 106.751452, -6.225962 },
//            { 103.93332481, 1.37629146 }, { -117.92106628, 33.67256852 }, { -87.648643, 41.9496575 },
//            { -75.6940147, 45.4262746 }, { 100.777197, 13.756853 }, { -71.546809, -32.951863 },
//            { -0.154004, 50.82435 }, { -99.17343378, 19.39454354 }, { -73.950995, 40.712017 },
//            { -75.6060153, 39.9614446 }, { 101.216536, 14.201108 }, { 131.812388, 34.060683 },
//            { -115.17421603, 36.10463023 }, { -0.561769, 52.336913 }, { -1.195611, 53.136112 },
//            { -76.7255759, 39.1541249 }, { 98.675598, 3.585242 }, { 106.83, -6.39 }, { 120.994903, 14.644063 },
//            { -82.972908, 33.281952 }, { -81.43701158, 41.28734853 }, { 30.3275013, 59.9368919 },
//            { -3.17831039, 55.93774808 }, { 114.940784, 4.8914712 }, { 139.65474844, 35.73740792 },
//            { -80.10968685, 40.68434806 }, { 121.03217125, 14.65662729 }, { -94.839805, 39.809151 },
//            { -72.5889408, -38.7406631 }, { -83.285997, 42.501942 }, { 5.698742, 51.492756 },
//            { -79.9735085, 40.4329809 }, { -84.605516, 33.437903 }, { 112.74809, -7.258108 },
//            { 139.740978, 35.626915 }, { 127.342702, 36.361095 }, { -3.822088, 53.320867 },
//            { -117.157036, 32.8015649 }, { -99.74498034, 32.46568322 }, { 5.085566, 52.675818 },
//            { -4.032997, 39.876909 }, { -99.2059803, 19.4301376 }, { 13.3762417, 45.9845673 },
//            { -87.6635389, 41.9284183 }, { 100.999982, 13.41189 }, { 127.106981, 37.505128 },
//            { 112.497865, -7.863998 }, { 11.32836342, 48.17922188 }, { 100.33574, 5.422625 },
//            { -78.16532135, 42.0661165 }, { -79.3853607, 43.6391212 }, { -73.9346553, 40.797073 },
//            { -158.0052785, 21.4001723 }, { 101.422457, 12.64232 }, { 106.9007452, -6.1675169 },
//            { -47.4430649, -23.485795 }, { 135.80768287, 34.88933457 }, { 4.433546, 50.924789 },
//            { 138.91455129, 35.27613717 }, { -74.006144, 40.729048 }, { -75.19738197, 39.89268234 },
//            { -118.454699, 34.020029 }, { -71.0658558, 42.352435 }, { -102.2975343, 21.9178709 },
//            { 101.711591, 3.07251334 }, { -122.654753, 45.508881 }, { 28.982219, 41.033754 },
//            { 115.258381, -8.695919 }, { -96.725202, 17.062949 }, { 15.2734046, 46.2305875 },
//            { 37.6532793, 55.75990319 }, { -43.9343466, -19.9370788 }, { -70.655308, -33.433447 },
//            { 101.447048, 0.53465 }, { 139.76061523, 35.6629667 }, { 139.34477091, 35.59486855 },
//            { -77.974974, 39.144308 }, { -70.79388142, -33.39687316 }, { -80.3765049, 26.0077744 },
//            { -103.43365073, 34.21473563 }, { 100.511473, 13.730945 }, { -122.74849728, 45.4272754 },
//            { -4.7883351, 37.8827973 }, { 37.627406, 55.76369 }, { -64.405514, 45.071941 },
//            { -86.83653831, 21.14763321 }, { 37.5955297, 55.7712958 }, { -95.9757318, 36.0990432 },
//            { -77.94859975, 34.23530915 }, { 7.2873449, 58.0727662 }, { -85.79785824, 43.42144521 },
//            { -77.110028, 38.880105 }, { 106.779278, -6.186285 }, { -81.35538, 28.5676 }, { 21.0026077, 52.2324078 },
//            { -111.83811665, 40.76411256 }, { -77.9786, 35.368778 }, { 100.58020413, 13.74730555 },
//            { 127.023319, 37.518574 }, { 136.783543, 36.897039 }, { -46.65983677, -23.62537753 },
//            { -80.265813, 25.810874 }, { 4.8805696, 52.3655272 }, { -118.2827889, 34.1457519 },
//            { -92.463834, 44.022724 }, { -82.493481, 27.917188 }, { -122.43102908, 37.77192748 },
//            { 138.56424809, -35.09292776 }, { 28.986334, 41.038994 }, { -46.677808, -23.60407 },
//            { 103.661951, 16.061725 }, { 101.767399, 2.934107 }, { 101.93327799, 2.69024828 },
//            { -85.61366558, 42.28096026 }, { 4.33270097, 50.79121625 }, { -86.810858, 35.965317 },
//            { 6.74493, 52.300378 }, { 12.47719, 41.90993 }, { 139.97104526, 35.8622307 }, { -122.483773, 47.241694 },
//            { 5.32785756, 52.06545159 }, { 130.48041344, 33.59689091 }, { 109.2492485, -7.42715564 },
//            { 106.74470901, -6.31184348 }, { -58.4144783, -34.58025976 }, { -46.511442, -23.615924 },
//            { -93.6592374, 41.6039827 }, { 139.71403599, 35.68699954 }, { -46.57617331, -23.54031407 },
//            { 100.572974, 13.72044 }, { -73.84517072, 40.75906277 }, { -118.054974, 34.132712 },
//            { 106.599502, -6.22749 }, { 4.777795, 52.962729 }, { 114.83766854, 4.91825394 }, { 34.771902, 32.090806 },
//            { 103.87584, 1.348129 }, { 139.70215917, 35.68304104 }, { -75.144091, 40.0418356 },
//            { 101.60551071, 3.16061298 }, { 100.593202, 14.346211 }, { 100.53155422, 13.72062502 },
//            { 106.831075, -6.37925 }, { -44.1977418, -19.9712097 }, { -46.6890812, -23.5953546 },
//            { 137.96952456, 36.23132962 }, { 106.665881, -6.292195 }, { 100.61647296, 13.98723046 },
//            { 110.3511858, 1.55523272 }, { 103.748085, 1.34898 }, { -118.49856198, 34.00842244 },
//            { -82.07237587, 33.50482069 }, { 153.39898825, -27.91420693 }, { -0.60916185, 51.48190406 },
//            { 9.15813446, 45.45049748 }, { -80.096113, 26.808152 }, { 114.43067551, 30.51524482 },
//            { 76.5963101, 8.8721586 }, { 134.662064, 34.869083 }, { 139.611533, 35.462051 }, { -75.97072, 42.08878 },
//            { -77.1946972, 38.9918039 }, { 102.289059, 2.259054 }, { -60.012099, -3.102628 }, { 106.840209, -6.35226 },
//            { 127.030989, 37.499708 }, { 139.702072, 35.691298 }, { -70.661016, -33.449235 },
//            { -48.06000078, -15.82505403 }, { 48.283755, 28.880026 }, { -78.967356, 33.609567 },
//            { -122.378549, 47.644008 }, { 106.992464, -6.2466052 }, { -46.681378, -23.5826376 },
//            { -99.3741703, 19.30227344 }, { -79.96161, 40.4266 }, { -84.47100163, 39.25992143 },
//            { -100.40555477, 20.57738986 }, { 34.800892, 32.174569 }, { 103.87188908, 1.49482347 },
//            { 9.68584701, 45.02934785 }, { -72.543991, -13.163935 }, { -47.3308914, -22.7523495 },
//            { -70.58541, -33.4152 }, { -51.19156837, -30.00125333 }, { 104.040515, 1.109531 },
//            { 140.09201288, 35.6365244 }, { -0.13290882, 51.52855719 }, { 106.85429, -6.182686 },
//            { -49.317443, -16.712511 }, { -104.98601, 39.66927 }, { -95.8995415, 41.2619566 },
//            { 5.66242191, 51.47563548 }, { -0.321799, 39.374054 }, { -88.15189362, 42.90243897 },
//            { 101.709249, 3.143343 }, { 127.011244, 37.480328 }, { -80.2714614, 36.090303 }, { 47.989478, 29.354017 },
//            { 28.99899244, 41.06123288 }, { -95.4518902, 30.1779437 }, { -86.4563556, 36.9844367 },
//            { 106.78022, -6.342118 }, { 100.56189537, 13.81278502 }, { -95.85123, 36.059554 },
//            { 2.187014, 41.3951683 }, { -99.167843, 19.421541 }, { 109.2573812, 0.1429273 },
//            { -98.86785507, 19.51526086 }, { 101.740523, 3.024066 }, { -82.474968, 27.937345 },
//            { -70.32460213, 43.67458865 }, { -84.4797349, 42.73503523 }, { -70.648126, 19.767523 },
//            { 141.017402, 43.185955 }, { 12.5565549, 55.6701706 }, { -122.25524, 37.510826 },
//            { -75.720001, 39.767065 }, { 106.82817936, -6.19358985 }, { -0.50112247, 51.43016696 },
//            { -84.537096, 39.133606 }, { 134.026535, 34.600239 }, { 106.837438, -6.160217 }, { 127.074597, 37.547903 },
//            { 139.76544857, 35.68152687 }, { -3.69329453, 40.44700421 }, { -51.17419302, -30.05974356 },
//            { 100.536939, 13.761782 }, { 136.84531, 34.48322 }, { 2.3676777, 48.8576613 }, { -40.636361, -19.529818 },
//            { 106.6539216, -6.1227828 }, { 120.984728, 14.568195 }, { -1.692695, 42.172746 },
//            { -111.87270641, 40.58146469 }, { 4.304882, 52.0750972 }, { 29.011347, 41.078084 },
//            { 112.759903, -7.296104 }, { -88.092455, 43.019473 }, { 139.535968, 35.682354 },
//            { 37.61057854, 55.75434903 }, { -73.100632, 40.812988 }, { -104.706298, 39.835403 },
//            { -122.2616727, 47.6821495 }, { 135.71579576, 34.62046406 }, { 11.355756, 50.938198 },
//            { 130.398525, 33.585096 }, { 107.60473251, -6.89400551 }, { 106.813839, -6.388911 },
//            { 115.037182, -8.154998 }, { 139.7403941, 35.6735714 }, { -47.79168606, -21.18293119 },
//            { 2.12281421, 41.38089014 }, { 101.803119, 2.882074 }, { 106.89123541, -6.24399062 },
//            { 100.648608, 13.770808 }, { 116.09716415, 5.96145869 }, { 101.695439, 3.068974 },
//            { -93.458181, 45.016675 }, { -90.1794262, 29.9807089 }, { -88.1835235, 43.0400728 },
//            { -76.88569028, 40.263472 }, { -73.99287701, 40.75037809 }, { 127.025997, 37.52085 },
//            { 101.61498427, 3.01807331 }, { -118.10920715, 33.75470944 }, { -96.821336, 32.929578 },
//            { 28.99291992, 41.06306111 }, { 126.978762, 37.567414 }, { 110.39220214, -7.78042236 },
//            { -81.57440364, 28.41442042 }, { -76.61058426, 39.18994444 }, { 153.037096, -27.458231 },
//            { -3.793882, 40.432722 }, { 100.951742, 13.59378 }, { -2.2975977, 52.1036762 }, { 103.85091, 1.28287 },
//            { 4.773525, 51.581157 }, { 10.0067317, 53.5526234 }, { -122.402898, 37.776178 },
//            { -43.93535614, -19.95729501 }, { -104.77506638, 41.14737946 }, { -121.39065577, 38.46222588 },
//            { 100.53165, 13.746728 }, { -116.36182308, 33.72066315 }, { 139.61528778, 35.68455954 },
//            { 139.605489, 35.488821 }, { 135.47335676, 34.60846876 }, { 115.93747616, -32.01950204 },
//            { 100.292584, 5.361227 }, { -103.346279, 20.677074 }, { 139.673926, 35.487165 }, { 140.313337, 38.21892 },
//            { -58.43426228, -34.61721046 }, { -54.5174, -21.748358 }, { -122.600892, 45.542018 },
//            { -112.126216, 33.7988162 }, { -74.03088, 4.734322 }, { -84.252662, 33.772364 }, { -100.268354, 25.64401 },
//            { -34.90079641, -8.13196851 }, { -73.04277, -36.82735 }, { 100.605712, 14.350756 },
//            { 106.79916859, -6.22563017 }, { 2.6568034, 39.6047942 }, { 101.606009, 3.0733 }, { -79.229018, 40.44387 },
//            { -95.898483, 36.019058 }, { -70.9260193, 43.1340804 }, { 135.49519, 34.671137 },
//            { 127.024006, 37.524187 }, { -74.0769163, 40.7199291 }, { -75.1790148, 39.9487603 },
//            { -87.6542347, 41.8714871 }, { -123.5058243, 48.4404041 }, { 101.45, 0.5333333 },
//            { 100.499644, 13.753131 }, { 107.5988102, -6.89754171 }, { 4.12386417, 45.13419282 },
//            { 4.343967, 51.999602 }, { 37.4236195, 55.7705951 }, { 28.896568, 41.046044 }, { 127.9146726, 36.9818059 },
//            { -73.99605274, 40.70536767 }, { 135.77945278, 35.02504167 }, { 54.365755, 24.497599 },
//            { -75.459563, 40.17629 }, { -91.07553437, 41.4435362 }, { 37.41659045, 55.90494227 },
//            { 139.6503253, 35.7053735 }, { -122.540222, 47.810313 }, { -46.6951645, -23.6063551 },
//            { 103.83856773, 1.30060946 }, { 136.906697, 35.154417 }, { -3.528409, 50.723694 },
//            { -92.35300541, 34.67151155 }, { -88.0030265, 43.0166749 }, { -122.62410522, 38.24959768 },
//            { 110.322069, 1.55993 }, { 100.58640003, 13.7313914 }, { -91.9464963, 30.1452781 },
//            { -49.183952, -25.542982 }, { -73.9713071, 40.7563117 }, { 106.810341, -6.608522 },
//            { 116.883734, -1.244734 }, { 29.066367, 41.02852 }, { -99.18624401, 19.38058743 }, { 5.285004, 51.730957 },
//            { -115.15075207, 36.08521089 }, { 103.7642169, 1.38000257 }, { -79.967557, 40.423555 },
//            { -118.383152, 34.08537 }, { -149.90660191, 61.1596969 }, { 103.8863797, 1.329497 },
//            { -2.21856, 53.482127 }, { -117.91947884, 33.81052581 }, { -76.62269443, 39.27796536 },
//            { -80.1012969, 26.14945114 }, { -115.0402332, 36.0638235 }, { -73.80975723, 42.7452473 },
//            { 37.74752276, 55.6521753 }, { 8.20257068, 50.04322886 }, { -121.265883, 38.748721 },
//            { 121.09731674, 14.61369258 }, { 130.95731825, 33.94519121 }, { 4.427619, 51.937278 },
//            { -47.88339615, -15.79324466 }, { -78.467023, 38.032226 }, { -73.891495, 40.860974 },
//            { -72.8659165, 40.8034009 }, { -93.2363, 44.9799 }, { -72.218905, -38.676737 },
//            { 139.79803741, 35.71144328 }, { -99.173879, 19.389205 }, { 110.3867197, -7.7827716 },
//            { -0.23260117, 5.5983893 }, { -75.01949787, 40.10233397 }, { -85.49872732, 44.68229877 },
//            { -111.404199, 40.512041 }, { 103.85456443, 1.2919535 }, { -111.89506531, 40.75592098 },
//            { 101.709261, 3.06731 }, { 124.852913, 1.476972 }, { -5.661784, 40.9732631 }, { 2.37442017, 48.86562522 },
//            { 23.7237495, 37.9793156 }, { 106.811836, -6.235238 }, { 112.675636, -7.267862 },
//            { 112.626834, -7.980505 }, { 138.289011, 34.8683507 }, { 138.9119382, 35.1187525 },
//            { 119.4459343, -5.1637793 }, { 130.8582689, 31.3714596 }, { 103.8224975, 1.2651684 },
//            { 38.651968, 55.821814 }, { -88.45101357, 44.47737018 }, { -81.313891, 28.460665 },
//            { -81.38715327, 28.58257413 }, { -97.23860621, 32.857969 }, { -81.55906677, 28.3554152 },
//            { 28.027254, -26.01497 }, { 14.504514, 46.051391 }, { -118.4060705, 34.0695907 },
//            { 106.80912495, -6.22405167 }, { 136.878318, 35.169973 }, { 51.508914, 25.272514 },
//            { -57.56921768, -25.28102295 }, { 103.74443293, 1.38560139 }, { -16.7109732, 28.3739845 },
//            { 72.8462841, 19.0981605 }, { -80.0312442, 32.8157652 }, { 103.88942, 1.36972 },
//            { 106.91727161, -6.2485393 }, { 107.6142168, -6.89643399 }, { 137.22601323, 34.82156728 },
//            { -1.46375656, 53.38046138 }, { 139.99140322, 35.69400975 }, { 28.001104, 41.28219 },
//            { 131.86415434, 37.24208182 }, { 139.63123083, 35.51015121 }, { -118.35071308, 34.067288 },
//            { -99.1721159, 19.4118741 }, { 28.692392, 41.067047 }, { 121.0233355, 14.6021472 },
//            { -103.3856606, 20.6579219 }, { 101.711617, 3.157644 }, { -122.29216576, 47.16065706 },
//            { 100.646984, 13.697593 }, { -6.1767972, 53.3007036 }, { -7.417726, 38.778932 }, { 101.724556, 3.184447 },
//            { -117.51223326, 33.82433015 }, { 18.07205, 59.33562 }, { -43.35126758, -21.76877627 },
//            { 138.593249, -34.937376 }, { -122.66729951, 38.9714992 }, { 112.7508202, -7.2772916 },
//            { -1.89678848, 52.47759104 }, { -89.628073, 21.027719 }, { -73.56853008, 45.51864679 },
//            { -83.33616436, 42.45566996 }, { 100.5558235, 13.7919379 }, { 101.7336841, 2.819684 },
//            { 10.741311, 59.922152 }, { 103.84573, 1.29865 }, { -80.84901631, 35.21957837 },
//            { -46.807251, -23.523085 }, { -46.66276574, -23.54505492 }, { 110.85765123, -7.55427107 },
//            { 139.71090317, 35.72961767 }, { 13.483072, 55.585368 }, { 106.9361281, -6.9169991 },
//            { 101.58599496, 3.07906613 }, { -120.5905946, 37.3468448 }, { 139.646211, 35.5536474 },
//            { 112.688292, -7.3201609 }, { 8.523119, 47.358528 }, { 11.239328, 44.577359 },
//            { -87.59147898, 38.0291276 }, { -93.2688, 44.9847 }, { -111.8757328, 40.7604293 },
//            { 135.49616575, 34.70422331 }, { 127.05306832, 37.23961771 }, { -3.6297621, 40.4101294 },
//            { -84.68216, 33.343446 }, { -97.438335, 27.73836 }, { -117.8593127, 33.6805892 },
//            { -3.5775418, 40.4740667 }, { 137.178221, 36.6719321 }, { 13.19696188, 55.70225836 },
//            { -87.634344, 41.834359 }, { -75.025209, 39.8463715 }, { -73.9671, 40.6933 }, { 18.355946, 39.796676 },
//            { 103.783062, 1.304551 }, { 103.842922, 1.428579 }, { -46.6388182, -23.5489433 }, { 101.588812, 2.968619 },
//            { 4.447812, 51.533142 }, { -86.1429695, 39.8696884 }, { 16.3636497, 48.2125703 },
//            { 130.621327, 32.504065 }, { 5.3958274, 52.1551197 } };

    public static final double[][] coordinates = new double[][] {
        {-77.57274627685547,37.44675454728125},
        {-74.00313913822174,40.73359624463056},
        {-75.15926241874695,39.933178407993445},
        {-73.97977,40.727068},
        {-73.9678423828963,40.75637710175142},
        {-73.9544,40.730957},
        {-118.28146934509277,34.092793047745744},
        {-73.994533,40.727838},
        {-73.988079,40.741872},
        {-87.664051,41.941567},
        {-118.253499,34.075314},
        {-118.498436,34.02940528},
        {-73.98139309730372,40.724826769567784},
        {-74.00601983070374,40.73968518262072},
        {-71.08036279678345,42.34612744510111},
        {-118.465176,34.053922},
        {-73.990682,40.718224},
        {-73.98176614455365,40.72215992206811},
        {-73.994129,40.722788},
        {-73.967912,40.756208},
        {-73.98735075,40.719831},
        {-73.99048526,40.72461247444153},
        {-74.00528387485899,40.72848308713778},
        {-73.967686,40.756161},
        {-73.98710489273071,40.748118},
        {-73.98829722365633,40.73492041854701},
        {-75.290094,40.007471},
        {-118.457514,34.025916},
        {-74.00208,40.726289},
        {-73.97837698459625,40.7416320618884},
        {-74.003444,40.736216},
        {-73.986315,40.728014},
        {-74.00417,40.738098},
        {-118.331111,34.159909},
        {-73.95775,40.721353},
        {-73.995808,40.726548},
        {-74.00486,40.731538},
        {-73.96517345125564,40.761762953668445},
        {-73.986909,40.736827},
        {-73.95044303757209,40.783731985028744},
        {-71.08520686626434,42.34821248964702},
        {-118.4661716222763,34.021066154705345},
        {-73.9160068616772,40.77284016722},
        {-73.95681629950255,40.717135211294305},
        {-73.9962589623642,40.721941345858085},
        {-73.891463,40.747721},
        {-73.98347854614258,40.72607169369348},
        {-74.00062,40.729884},
        {-74.00255978107452,40.73258001246407},
        {-73.99330097284587,40.75739368035236},
        {-73.98617378645295,40.72253605204139},
        {-74.00150217980284,40.726055192977064},
        {-73.976422,40.785953},
        {-74.000553,40.730019},
        {-74.00173172336244,40.73251613267209},
        {-73.987873,40.720904},
        {-71.07991218566895,42.34718999783513},
        {-122.39909875736403,37.794928810634154},
        {-87.662597,41.935374},
        {-118.48611116409302,34.024199},
        {-73.9845085144043,40.7275189451569},
        {-74.000197,40.727873},
        {-71.085311,42.347808},
        {-73.98792418909154,40.721100383119634},
        {-73.979717,40.7272},
        {-73.993297,40.747357},
        {-122.41047566666667,37.7992816},
        {-73.982913,40.727006616666664},
        {-74.002086,40.726836},
        {-73.97376555715006,40.758858935847655},
        {-74.003008,40.731213},
        {-122.41063744444445,37.79966149},
        {-87.677331,41.919532},
        {-73.9784574508667,40.7290474687069},
        {-73.996823,40.721734},
        {-74.00251150131226,40.730592217474026},
        {-73.98770036800471,40.72167282089118},
        {-71.07991658990694,42.3473804927808},
        {-122.26681888103485,37.85931142293676},
        {-73.993308,40.694543},
        {-73.98317223921723,40.72104871230518},
        {-73.98632034659386,40.72241836171777},
        {-74.0095067024231,40.738087804883584},
        {-74.00209325391072,40.731368592926984},
        {-118.45988081105197,34.02481579056915},
        {-77.10838399071741,38.882354982633395},
        {-73.974632,40.760413},
        {-73.979634,40.727231},
        {-74.011669,40.673737},
        {-118.47721695899963,34.03652},
        {-74.008142,40.73761},
        {-73.98412493424314,40.76347174474798},
        {-71.07536315917969,42.34607986769295},
        {-118.422786,34.146852},
        {-73.977128,40.78482},
        {-73.982816,40.731546},
        {-73.9908854896675,40.73662677399135},
        {-71.088422,42.34868438},
        {-122.432625,37.797572},
        {-75.1679876446724,39.94855257488519},
        {-73.988483,40.72311},
        {-73.965711,40.761321},
        {-73.99177730083466,40.736961},
        {-71.089728,42.350651},
        {-73.979227,40.781856},
        {-73.99259805679321,40.725347},
        {-122.46636426983471,37.7644893202645},
        {-73.98834706666666,40.72005},
        {-73.99984371940887,40.726986102403},
        {-74.003205,40.731598},
        {-73.98125535659763,40.764132999815374},
        {-122.3938000202179,37.79619516102866},
        {-118.44750881195068,34.152478379387645},
        {-122.483021,37.763395},
        {-73.98915233092283,40.73649401618784},
        {-73.98885964362958,40.73880046477051},
        {-71.08219142150125,42.34965449610334},
        {-122.46606,37.76398339},
        {-122.409604,37.800019},
        {-73.985548,40.719175},
        {-73.9995288848877,40.72228267283148},
        {-74.0035817027092,40.73199567193995},
        {-73.986712,40.763576},
        {-74.00944232940674,40.74517613004631},
        {-122.39705202466313,37.77878701337712},
        {-118.44851732254028,33.99143594892645},
        {-122.430311,37.76654},
        {-73.992822,40.726121},
        {-75.144154,39.948798},
        {-118.468051,33.99106763333333},
        {-122.42169723333332,37.761879},
        {-73.999595,40.728415283333334},
        {-73.98545265197754,40.75692872907425},
        {-73.988757,40.738764},
        {-75.161366,39.949695},
        {-122.41941301,37.755311},
        {-73.98769604,40.7196978},
        {-73.98126203738285,40.728156},
        {-73.998544,40.725969},
        {-74.00254086221508,40.73399022706802},
        {-74.001918,40.727063},
        {-118.37206363677979,34.14107747404742},
        {-122.42179822366401,37.76438976653991},
        {-73.98378318991934,40.72547161917389},
        {-74.002861,40.725769},
        {-118.35363149642944,34.13612239539322},
        {-73.9885425567627,40.71634664858483},
        {-73.98340754384972,40.72831647396491},
        {-73.9965611879883,40.72478554672679},
        {-73.990655,40.744555},
        {-73.98062404376499,40.7805970731861},
        {-122.290175,37.842137},
        {-122.46593804,37.764212},
        {-73.988473,40.719859},
        {-71.07771,42.343995},
        {-73.99004760693109,40.71814042607163},
        {-122.466438,37.76371663},
        {-74.008758,40.752294},
        {-73.984048,40.725306},
        {-73.98344197864982,40.77253079341116},
        {-73.994553,40.721748},
        {-122.39816943501836,37.77947007181946},
        {-73.987829,40.719955},
        {-122.4462103843689,37.77017196507861},
        {-73.99477,40.724866},
        {-73.9840780198574,40.72234721402162},
        {-73.99799012903304,40.75587101401511},
        {-74.003214,40.730047},
        {-73.988404,40.72898801666667},
        {-71.122908,42.343128},
        {-122.42039680480957,37.80564739271261},
        {-122.42877066135406,37.76710606854535},
        {-73.9857892696372,40.72785651161249},
        {-73.985883,40.729444},
        {-73.98561709767907,40.727117119821656},
        {-71.06890204696381,42.36129707579819},
        {-118.38192861666667,34.13945101666667},
        {-122.46621,37.765139},
        {-73.98479067013146,40.7683285476262},
        {-73.983208,40.722899},
        {-73.956964,40.770591},
        {-71.06655750101375,42.361240497983246},
        {-118.14702125,34.01641309261322},
        {-73.99083852767944,40.736949700653255},
        {-73.98456148803234,40.72563822355932},
        {-73.99377787866159,40.72719047826229},
        {-74.000935,40.730874240000006},
        {-122.400623,37.799577},
        {-122.412694,37.771007},
        {-74.00844,40.723698},
        {-73.986561,40.727339},
        {-74.000919,40.73083635},
        {-73.98921310901642,40.726104216543966},
        {-74.00206089019775,40.72868973229961},
        {-73.997435,40.736497},
        {-122.406410013052,37.79811403396612},
        {-118.37472438812256,34.09055402834848},
        {-122.4670276408585,37.76406242237115},
        {-73.98865877954262,40.72827120796546},
        {-73.99681943113464,40.7221759229718}
    };

    public static void main(String[] args) throws URISyntaxException, IOException {
        if (args.length < 8) {
            System.out
                    .println("Example Usage: java -jar SpatialIndexEvaluator.jar hbtree load SimpleGeoPlace 1 0.0025 ipAddress portnum admFilePath [rand]");
            System.out.println("\targ0: index type - shbtree, dhbtree, sif, or rtree");
            System.out.println("\targ1: workload type - load or query");
            System.out.println("\targ2: dataset name to use");
            System.out.println("\targ3: iteration count");
            System.out.println("\targ4: circle radius");
            System.out.println("\targ5: asterix cc ip address");
            System.out.println("\targ6: asterix api port number");
            System.out.println("\targ7: adm file absolute path");
            System.out.println("\targ8: random region query or not - default is no-random");
            System.exit(-1);
        }

        indexType = args[0];
        workType = args[1];
        datasetName = args[2];
        int runCount = Integer.parseInt(args[3]);
        circleRadius = Double.parseDouble(args[4]);
        ipAddress = args[5];
        portNum = args[6];
        admFilePath = args[7];
        if (args.length == 9) {
            randomQuery = args[8].contentEquals("rand");
        }

//        //prepare dataset
//        runDatasetCreation();
//
//        //prepare a target index for queries
//        if (indexType.contains("shbtree") && workType.contains("query")) {
//            runSHBTreeLoad(0);
//        } else if (indexType.contains("dhbtree") && workType.contains("query")) {
//            runDHBTreeLoad(0);
//        } else if (indexType.contains("rtree") && workType.contains("query")) {
//            runRTreeLoad(0);
//        } else if (indexType.contains("sif") && workType.contains("query")) {
//            runSIFLoad(0);
//        }

        for (int j = 0; j < runCount; j++) {
            if (j != 0) {
                circleRadius *= 2;
            }
            System.out.println("running " + indexType + " " + workType + " " + datasetName + " " + runCount + "(" + j +") "
                    + circleRadius + " " + ipAddress + " " + portNum + " " + admFilePath );

            if (args[0].contains("shbtree")) {
                if (args[1].contains("load")) {
                    runSHBTreeLoad(j);
                } else if (args[1].contains("query")) {
                    runQuery("SHBTree", j);
                }
            } else if (args[0].contains("dhbtree")) {
                if (args[1].contains("load")) {
                    runDHBTreeLoad(j);
                } else if (args[1].contains("query")) {
                    runQuery("DHBTree", j);
                }
            } else if (args[0].contains("rtree")) {
                if (args[1].contains("load")) {
                    runRTreeLoad(j);
                } else if (args[1].contains("query")) {
                    runQuery("RTree", j);
                }
            } else if (args[0].contains("sif")) {
                if (args[1].contains("load")) {
                    runSIFLoad(j);
                } else if (args[1].contains("query")) {
                    runQuery("SIF", j);
                }
            }
        }
    }

    private static void runDatasetCreation() throws URISyntaxException, IOException {
        HttpResponse response;
        AsterixHttpClient ahc = new AsterixHttpClient(ipAddress, portNum);

        // ddl
        ahc.prepareDDL(getDDLAQL());
        response = ahc.execute();
        ahc.printResult(response, null);

        // load
        ahc.prepareUpdate(getLoadAQL());
        response = ahc.execute();
        ahc.printResult(response, null);
    }

    private static void runSHBTreeLoad(int runCount) throws URISyntaxException, IOException {
        HttpResponse response;
        AsterixHttpClient ahc = new AsterixHttpClient(ipAddress, portNum);
        StringBuilder sb = new StringBuilder();
        FileOutputStream fosLoadHBTree = ahc.openOutputFile("./SHBTreeLoadResult" + runCount + ".txt");

        try {
            //drop existing index
            ahc.prepareDDL(getDropSHBTreeAQL());
            response = ahc.execute();
            ahc.printResult(response, fosLoadHBTree);

            //create a new index
            ahc.prepareDDL(getCreateSHBTreeAQL());
            sw.start();
            response = ahc.execute();
            sw.suspend();
            sb.append("SHBTreeIndex: " + sw.getElapsedTime() + "\n");
            ahc.printResult(response, fosLoadHBTree);
        } finally {
            ahc.closeOutputFile(fosLoadHBTree);
            System.out.println(sb.toString());
        }
    }

    private static void runDHBTreeLoad(int runCount) throws URISyntaxException, IOException {
        HttpResponse response;
        AsterixHttpClient ahc = new AsterixHttpClient(ipAddress, portNum);
        StringBuilder sb = new StringBuilder();
        FileOutputStream fosLoadHBTree = ahc.openOutputFile("./DHBTreeLoadResult" + runCount + ".txt");

        try {
            //drop existing index
            ahc.prepareDDL(getDropDHBTreeAQL());
            response = ahc.execute();
            ahc.printResult(response, fosLoadHBTree);

            //create a new index
            ahc.prepareDDL(getCreateDHBTreeAQL());
            sw.start();
            response = ahc.execute();
            sw.suspend();
            sb.append("DHBTreeIndex: " + sw.getElapsedTime() + "\n");
            ahc.printResult(response, fosLoadHBTree);
        } finally {
            ahc.closeOutputFile(fosLoadHBTree);
            System.out.println(sb.toString());
        }
    }

    private static void runRTreeLoad(int runCount) throws URISyntaxException, IOException {
        HttpResponse response;
        AsterixHttpClient ahc = new AsterixHttpClient(ipAddress, portNum);
        StringBuilder sb = new StringBuilder();
        FileOutputStream fosLoadRTree = ahc.openOutputFile("./RTreeLoadResult" + runCount + ".txt");

        try {
            //drop existing index
            ahc.prepareDDL(getDropRTreeAQL());
            response = ahc.execute();
            ahc.printResult(response, fosLoadRTree);

            //create a new index
            ahc.prepareDDL(getCreateRTreeAQL());
            sw.start();
            response = ahc.execute();
            sw.suspend();
            sb.append("RTreeIndex: " + sw.getElapsedTime() + "\n");
            ahc.printResult(response, fosLoadRTree);
        } finally {
            ahc.closeOutputFile(fosLoadRTree);
            System.out.println(sb.toString());
        }
    }

    private static void runSIFLoad(int runCount) throws URISyntaxException, IOException {
        HttpResponse response;
        AsterixHttpClient ahc = new AsterixHttpClient(ipAddress, portNum);
        StringBuilder sb = new StringBuilder();
        FileOutputStream fosLoadSIF = ahc.openOutputFile("./SIFLoadResult" + runCount + ".txt");

        try {
            //drop existing index
            ahc.prepareDDL(getDropSIFAQL());
            response = ahc.execute();
            ahc.printResult(response, fosLoadSIF);

            //create a new index
            ahc.prepareDDL(getCreateSIFAQL());
            sw.start();
            response = ahc.execute();
            sw.suspend();
            sb.append("SIFIndex: " + sw.getElapsedTime() + "\n");
            ahc.printResult(response, fosLoadSIF);
        } finally {
            ahc.closeOutputFile(fosLoadSIF);
            System.out.println(sb.toString());
        }
    }

    private static void runQuery(String indexType, int runCount) throws URISyntaxException, IOException {
        rand = new Random();
        rand.setSeed(1);
        HttpResponse response;
        AsterixHttpClient ahc = new AsterixHttpClient(ipAddress, portNum);
        StringBuilder sb = new StringBuilder();
        FileOutputStream fosCircleQuery = ahc
                .openOutputFile("./" + indexType + "CircleQueryResult" + runCount + ".txt");
        //        FileOutputStream fosRectangleQuery = ahc.openOutputFile("./" + indexType + "RectangleQueryResult" + runCount
        //                + ".txt");

        try {
            for (int i = 0; i < numQuery; i++) {
                // circle
                if (randomQuery) {
                    ahc.prepareQuery(getRandomCircleRegionQueryAQL());
                } else {
                    ahc.prepareQuery(getCircleRegionQueryAQL());
                    ++coordCircleIdx;
                    if (coordCircleIdx == coordinates.length) {
                        coordCircleIdx = 0;
                    }
                }
                sw.start();
                response = ahc.execute();
                sw.suspend();
                //                sb.append("CircleQuery\t" + sw.getElapsedTime() + "\t");
                sb.append("CircleQuery\t" + sw.getElapsedTime() + "\n");
                ahc.printResult(response, fosCircleQuery);

                //                // rectangle
                //                if (randomQuery) {
                //                    ahc.prepareQuery(getRandomRectangleRegionQueryAQL());
                //                } else {
                //                    ahc.prepareQuery(getRectangleRegionQueryAQL());
                //                    ++coordRectangleIdx;
                //                    if (coordRectangleIdx == coordinates.length) {
                //                        coordRectangleIdx = 0;
                //                    }
                //                }
                //                sw.start();
                //                response = ahc.execute();
                //                sw.stop();
                //                sb.append("RectangleQuery\t" + sw.getElapsedTime() + "\n");
                //                ahc.printResult(response, fosRectangleQuery);

                flipFlag++;
            }
        } finally {
            ahc.closeOutputFile(fosCircleQuery);
            //            ahc.closeOutputFile(fosRectangleQuery);
            System.out.println(sb.toString());
        }
    }

    private static String getDDLAQL() {
        if (datasetName.contains("SimpleGeoPlace")) {
            return "drop dataverse STBench if exists;" + " create dataverse STBench;" + " use dataverse STBench;"
                    + " create type SimpleGeoPlaceType as closed { " + "    coordinates: point, " + "    id: int64, "
                    + "    name: string, " + "    tags: string, " + "    categories: string, " + "    phone: string "
                    + " } " + " create dataset SimpleGeoPlace (SimpleGeoPlaceType) primary key id; ";
        }
        if (datasetName.contains("FsqCheckinTweet")) {
            return "drop dataverse STBench if exists;"
                    + " create dataverse STBench;"
                    + " use dataverse STBench; "
                    + " create type FsqCheckinTweetType as closed { id: int64, user_id: int64, user_followers_count: int64, "
                    + " text: string, datetime: datetime, coordinates: point, url: string? } "
                    + " create dataset FsqCheckinTweet (FsqCheckinTweetType) primary key id; ";
        }
        if (datasetName.contains("FsqVenue")) {
            return " drop dataverse STBench if exists; " + " create dataverse STBench; " + " use dataverse STBench; "
                    + " create type FsqVenueType as closed { "
                    + " id: int64, name: string, phone: string?, coordinates: point, "
                    + " categories: string, checkin_count: int64?, user_count: int64?, tags: string, url: string? } "
                    + " create dataset FsqVenue (FsqVenueType) primary key id; ";
        }
        throw new IllegalArgumentException("Unknown dataset name: " + datasetName);
    }

    private static String getCreateSHBTreeAQL() {
        if (datasetName.contains("SimpleGeoPlace")) {
            return " use dataverse STBench;"
                    + " create index shbtreePlaceCoordinate on SimpleGeoPlace(coordinates) type shbtree(-180.0,-90.0,180.0,90.0,h,h,h,h);  ";
        }
        if (datasetName.contains("FsqCheckinTweet")) {
            return " use dataverse STBench;"
                    + " create index shbtreeCheckinCoordinate on FsqCheckinTweet(coordinates) type shbtree(-180.0,-90.0,180.0,90.0,h,h,h,h);  ";
        }
        if (datasetName.contains("FsqVenue")) {
            return " use dataverse STBench;"
                    + " create index shbtreeVenueCoordinate on FsqVenue(coordinates) type shbtree(-180.0,-90.0,180.0,90.0,h,h,h,h);  ";
        }
        throw new IllegalArgumentException("Unknown dataset name: " + datasetName);
    }

    private static String getCreateDHBTreeAQL() {
        if (datasetName.contains("SimpleGeoPlace")) {
            return " use dataverse STBench;"
                    + " create index dhbtreePlaceCoordinate on SimpleGeoPlace(coordinates) type dhbtree;  ";
        }
        if (datasetName.contains("FsqCheckinTweet")) {
            return " use dataverse STBench;"
                    + " create index dhbtreeCheckinCoordinate on FsqCheckinTweet(coordinates) type dhbtree;  ";
        }
        if (datasetName.contains("FsqVenue")) {
            return " use dataverse STBench;"
                    + " create index dhbtreeVenueCoordinate on FsqVenue(coordinates) type dhbtree;  ";
        }
        throw new IllegalArgumentException("Unknown dataset name: " + datasetName);
    }

    private static String getCreateRTreeAQL() {
        if (datasetName.contains("SimpleGeoPlace")) {
            return " use dataverse STBench;"
                    + " create index rtreePlaceCoordinate on SimpleGeoPlace(coordinates) type rtree;  ";
        }
        if (datasetName.contains("FsqCheckinTweet")) {
            return " use dataverse STBench;"
                    + " create index rtreeCheckinCoordinate on FsqCheckinTweet(coordinates) type rtree;  ";
        }
        if (datasetName.contains("FsqVenue")) {
            return " use dataverse STBench;"
                    + " create index rtreeVenueCoordinate on FsqVenue(coordinates) type rtree;  ";
        }
        throw new IllegalArgumentException("Unknown dataset name: " + datasetName);
    }

    private static String getCreateSIFAQL() {
        if (datasetName.contains("SimpleGeoPlace")) {
            return " use dataverse STBench;"
                    + " create index sifPlaceCoordinate on SimpleGeoPlace(coordinates) type sif(-180.0,-90.0,180.0,90.0,h,h,h,h);  ";
        }
        if (datasetName.contains("FsqCheckinTweet")) {
            return " use dataverse STBench;"
                    + " create index sifCheckinCoordinate on FsqCheckinTweet(coordinates) type sif(-180.0,-90.0,180.0,90.0,h,h,h,h);  ";
        }
        if (datasetName.contains("FsqVenue")) {
            return " use dataverse STBench;"
                    + " create index sifVenueCoordinate on FsqVenue(coordinates) type sif(-180.0,-90.0,180.0,90.0,h,h,h,h);  ";
        }
        throw new IllegalArgumentException("Unknown dataset name: " + datasetName);
    }

    private static String getDropSHBTreeAQL() {
        if (datasetName.contains("SimpleGeoPlace")) {
            return " use dataverse STBench;" + " drop index SimpleGeoPlace.shbtreePlaceCoordinate;  ";
        }
        if (datasetName.contains("FsqCheckinTweet")) {
            return " use dataverse STBench;" + " drop index FsqCheckinTweet.shbtreeCheckinCoordinate;  ";
        }
        if (datasetName.contains("FsqVenue")) {
            return " use dataverse STBench;" + " drop index FsqVenue.shbtreeVenueCoordinate;  ";
        }
        throw new IllegalArgumentException("Unknown dataset name: " + datasetName);
    }

    private static String getDropDHBTreeAQL() {
        if (datasetName.contains("SimpleGeoPlace")) {
            return " use dataverse STBench;" + " drop index SimpleGeoPlace.dhbtreePlaceCoordinate;  ";
        }
        if (datasetName.contains("FsqCheckinTweet")) {
            return " use dataverse STBench;" + " drop index FsqCheckinTweet.dhbtreeCheckinCoordinate;  ";
        }
        if (datasetName.contains("FsqVenue")) {
            return " use dataverse STBench;" + " drop index FsqVenue.dhbtreeVenueCoordinate;  ";
        }
        throw new IllegalArgumentException("Unknown dataset name: " + datasetName);
    }

    private static String getDropRTreeAQL() {
        if (datasetName.contains("SimpleGeoPlace")) {
            return " use dataverse STBench;" + " drop index SimpleGeoPlace.rtreePlaceCoordinate;  ";
        }
        if (datasetName.contains("FsqCheckinTweet")) {
            return " use dataverse STBench;" + " drop index FsqCheckinTweet.rtreeCheckinCoordinate;  ";
        }
        if (datasetName.contains("FsqVenue")) {
            return " use dataverse STBench;" + " drop index FsqVenue.rtreeVenueCoordinate;  ";
        }
        throw new IllegalArgumentException("Unknown dataset name: " + datasetName);
    }

    private static String getDropSIFAQL() {
        if (datasetName.contains("SimpleGeoPlace")) {
            return " use dataverse STBench;" + " drop index SimpleGeoPlace.sifPlaceCoordinate;  ";
        }
        if (datasetName.contains("FsqCheckinTweet")) {
            return " use dataverse STBench;" + " drop index FsqCheckinTweet.sifCheckinCoordinate;  ";
        }
        if (datasetName.contains("FsqVenue")) {
            return " use dataverse STBench;" + " drop index FsqVenue.sifVenueCoordinate;  ";
        }
        throw new IllegalArgumentException("Unknown dataset name: " + datasetName);
    }

    private static String getLoadAQL() {
        return "use dataverse STBench; " + "load dataset " + datasetName + " using "
        + "\"edu.uci.ics.asterix.external.dataset.adapter.NCFileSystemAdapter\"" + "((\"path\"=\""
        + ipAddress + ":///" + admFilePath + "\"),(\"format\"=\"adm\"));";
    }

    private static String getRandomRectangleRegionQueryAQL() {
        double x1, y1, x2, y2, tx, ty;
        double xSize, ySize;
        x1 = rand.nextInt(180);
        x1 += rand.nextDouble();
        if (x1 >= 180 - RECTANGLE_MAX_SIZE) {
            x1 -= RECTANGLE_MAX_SIZE;
        }
        y1 = rand.nextInt(90);
        y1 += rand.nextDouble();
        if (y1 >= 90 - RECTANGLE_MAX_SIZE) {
            y1 -= RECTANGLE_MAX_SIZE;
        }
        xSize = rand.nextDouble();
        ySize = rand.nextDouble();

        // size will be between 0.1 and 1.0 which is roughly from 10 to 100 km
        if (xSize < RECTANGLE_MIN_SIZE) {
            xSize += RECTANGLE_MIN_SIZE;
        }
        x2 = x1 + xSize;
        if (ySize < RECTANGLE_MIN_SIZE) {
            ySize += RECTANGLE_MIN_SIZE;
        }
        y2 = y1 + ySize;

        switch (flipFlag % 4) {
            case 0:
                tx = x1 * -1;
                x1 = x2 * -1;
                x2 = tx;
                break;
            case 1:
                ty = y1 * -1;
                y1 = y2 * -1;
                y2 = ty;
                break;
            case 2:
                tx = x1 * -1;
                x1 = x2 * -1;
                x2 = tx;
                ty = y1 * -1;
                y1 = y2 * -1;
                y2 = ty;
                break;
            case 3:
                break;
        }

        // System.out.println("(x1, y1): " + x1 + ", " + y1 + ", " + "(x2, y2):"
        // + x2 + ", " + y2);

        StringBuilder sb = new StringBuilder();
        sb.append("use dataverse STBench; ");
        sb.append("count( ");
        sb.append("for $x in dataset " + datasetName + " ");
        sb.append("let $n :=  create-rectangle( ");
        sb.append("point(\"").append(x1).append(", ").append(y1).append("\") ");
        sb.append(", ");
        sb.append("point(\"").append(x2).append(", ").append(y2).append("\") ");
        sb.append(") ");
        sb.append("where spatial-intersect($x.coordinates, $n)");
        sb.append("return $x ");
        sb.append(");");
        return sb.toString();
    }

    private static String getRandomCircleRegionQueryAQL() {
        double x1, y1; // center point
        x1 = rand.nextInt(180);
        x1 += rand.nextDouble();
        if (x1 >= 180 - CIRCLE_MAX_RADIUS) {
            x1 -= CIRCLE_MAX_RADIUS;
        }
        if (x1 <= CIRCLE_MAX_RADIUS) {
            x1 += CIRCLE_MAX_RADIUS;
        }
        y1 = rand.nextInt(90);
        y1 += rand.nextDouble();
        if (y1 >= 90 - CIRCLE_MAX_RADIUS) {
            y1 -= CIRCLE_MAX_RADIUS;
        }
        if (y1 <= CIRCLE_MAX_RADIUS) {
            y1 += CIRCLE_MAX_RADIUS;
        }

        // radius will be between 0.05 and 0.5 which is roughly from 5km to 50km
        double radius = rand.nextDouble() / 2;
        if (radius < CIRCLE_MIN_RADIUS) {
            radius += CIRCLE_MIN_RADIUS;
        }

        switch (flipFlag % 4) {
            case 0:
                x1 = x1 * -1;
                break;
            case 1:
                y1 = y1 * -1;
                break;
            case 2:
                x1 = x1 * -1;
                y1 = y1 * -1;
                break;
            case 3:
                break;
        }

        // System.out.println("(x1, y1): " + x1 + ", " + y1 + ", " + "(radius):"
        // + radius);

        StringBuilder sb = new StringBuilder();
        sb.append("use dataverse STBench; ");
        sb.append("count( ");
        sb.append("for $x in dataset " + datasetName + " ");
        sb.append("let $n :=  create-circle( ");
        sb.append("point(\"").append(x1).append(", ").append(y1).append("\") ");
        sb.append(", ");
        sb.append(radius);
        sb.append(" )");
        sb.append("where spatial-intersect($x.coordinates, $n)");
        sb.append("return $x ");
        sb.append(");");
        return sb.toString();
    }

    private static String getRectangleRegionQueryAQL() {
        double x1, y1, x2, y2, tx, ty;
        double xSize, ySize;
        x1 = coordinates[coordRectangleIdx][0];
        y1 = coordinates[coordRectangleIdx][1];
        xSize = rand.nextDouble();
        ySize = rand.nextDouble();
        // size will be between 0.1 and 1.0 which is roughly from 10 to 100 km
        if (xSize < RECTANGLE_MIN_SIZE) {
            xSize += RECTANGLE_MIN_SIZE;
        }
        x2 = x1 + xSize;
        if (ySize < RECTANGLE_MIN_SIZE) {
            ySize += RECTANGLE_MIN_SIZE;
        }
        y2 = y1 + ySize;

        // System.out.println("(x1, y1): " + x1 + ", " + y1 + ", " + "(x2, y2):"
        // + x2 + ", " + y2);

        StringBuilder sb = new StringBuilder();
        sb.append("use dataverse STBench; ");
        sb.append("count( ");
        sb.append("for $x in dataset " + datasetName + " ");
        sb.append("let $n :=  create-rectangle( ");
        sb.append("point(\"").append(x1).append(", ").append(y1).append("\") ");
        sb.append(", ");
        sb.append("point(\"").append(x2).append(", ").append(y2).append("\") ");
        sb.append(") ");
        sb.append("where spatial-intersect($x.coordinates, $n)");
        sb.append("return $x ");
        sb.append(");");
        return sb.toString();
    }

    private static String getCircleRegionQueryAQL() {
        double x1, y1; // center point
        x1 = coordinates[coordCircleIdx][0];
        y1 = coordinates[coordCircleIdx][1];
        Double radius = circleRadius;

        // radius will be between 0.05 and 0.5 which is roughly from 5km to 50km
        //        double radius = rand.nextDouble() / 2;
        //        if (radius < CIRCLE_MIN_RADIUS) {
        //            radius += CIRCLE_MIN_RADIUS;
        //        }

        // System.out.println("(x1, y1): " + x1 + ", " + y1 + ", " + "(radius):"
        // + radius);

        StringBuilder sb = new StringBuilder();
        sb.append("use dataverse STBench; ");
        sb.append("count( ");
        sb.append("for $x in dataset " + datasetName + " ");
        sb.append("let $n :=  create-circle( ");
        sb.append("point(\"").append(x1).append(", ").append(y1).append("\") ");
        sb.append(", ");
        sb.append(String.format("%f",radius));
        sb.append(" )");
        sb.append("where spatial-intersect($x.coordinates, $n)");
        sb.append("return $x ");
        sb.append(");");
        return sb.toString();
    }

}