drop dataverse test if exists;
create dataverse test;
use dataverse test;

//---- Data Types ----

create type TwitterUserType as {
screen_name: string,
lang: string,
friends_count: int32,
statuses_count: int32,
name: string,
followers_count: int32
}

create type TweetMessageType as {
tweetid: int64,
user: TwitterUserType,
sender_location: point,
send_time: datetime,
referred_topics: {{ string }},
message_text: string
}

create type EmploymentType as {
organization_name: string,
start_date: date,
end_date: date?
}

create type FacebookUserType as {
id: int64,
alias: string,
name: string,
user_since: datetime,
friend_ids: {{ int64 }},
employment: [EmploymentType]
}

create type FacebookMessageType as {
message_id: int64,
author_id: int64,
in_response_to: int64?,
sender_location: point,
send_time: datetime,
message: string
}

//---- Datasets ----

create dataset TweetMessages(TweetMessageType)
primary key tweetid;

create dataset FacebookUsers(FacebookUserType)
primary key id;

create dataset FacebookMessages(FacebookMessageType)
primary key message_id;

create index fbuUsrSinceIx on FacebookUsers(user_since);

create index fbmAutIdIx on FacebookMessages(author_id);

create index twmSndTmIx on TweetMessages(send_time);

create index twmSndLocIx on TweetMessages(sender_location) type rtree;

create index tNGramIdx on TweetMessages(message_text) type ngram(2);

