DataverseUse fj-dblp-csx
TypeDecl DBLPType [
  open RecordType {
    id : int32,
    dblpid : string,
    title : string,
    authors : string,
    misc : string
  }
]
TypeDecl CSXType [
  open RecordType {
    id : int32,
    csxid : string,
    title : string,
    authors : string,
    misc : string
  }
]
DatasetDecl DBLP(DBLPType) partitioned by [[id]]
DatasetDecl CSX(CSXType) partitioned by [[id]]
WriteOutputTo asterix_nc1:rttest/fj-dblp-csx.adm
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [idDBLP]
    :
    Variable [ Name=$idDBLP ]
  )
  (
    LiteralExpr [STRING] [idCSX]
    :
    Variable [ Name=$idCSX ]
  )
]
]
FROM [  FunctionCall Metadata.dataset@1[
    LiteralExpr [STRING] [DBLP]
  ]
  AS Variable [ Name=$paperDBLP ]
,
  FunctionCall Metadata.dataset@1[
    LiteralExpr [STRING] [tokensDBLP]
  ]
  AS Variable [ Name=$prefixTokenDBLP ]
,
  FunctionCall Metadata.dataset@1[
    LiteralExpr [STRING] [CSX]
  ]
  AS Variable [ Name=$paperCSX ]
,
  FunctionCall Metadata.dataset@1[
    LiteralExpr [STRING] [tokensCSX]
  ]
  AS Variable [ Name=$prefixTokenCSX ]
]
Let Variable [ Name=$idDBLP ]
  :=
  FieldAccessor [
    Variable [ Name=$paperDBLP ]
    Field=id
  ]
Let Variable [ Name=$unrankedTokensDBLP ]
  :=
  FunctionCall fj-dblp-csx.counthashed-word-tokens@1[
    FieldAccessor [
      Variable [ Name=$paperDBLP ]
      Field=title
    ]
  ]
Let Variable [ Name=$tokensDBLP ]
  :=
  (
    SELECT ELEMENT [
    Variable [ Name=$i ]
    ]
    FROM [      Variable [ Name=$unrankedTokensDBLP ]
      AS Variable [ Name=$token ]
,
      (
        SELECT ELEMENT [
        FieldAccessor [
          Variable [ Name=$paper ]
          Field=title
        ]
        ]
        FROM [          FunctionCall Metadata.dataset@1[
            LiteralExpr [STRING] [DBLP]
          ]
          AS Variable [ Name=$paper ]
        ]
      )
      AS Variable [ Name=$tokenRanked ]
 AT 
Variable [ Name=$i ]
    ]
    Where
      OperatorExpr [
        Variable [ Name=$token ]
        =
        Variable [ Name=$tokenRanked ]
      ]
    Orderby
      Variable [ Name=$i ]
      ASC

  )
Let Variable [ Name=$idCSX ]
  :=
  FieldAccessor [
    Variable [ Name=$paperCSX ]
    Field=id
  ]
Let Variable [ Name=$unrankedTokensCSX ]
  :=
  FunctionCall fj-dblp-csx.counthashed-word-tokens@1[
    FieldAccessor [
      Variable [ Name=$paperCSX ]
      Field=title
    ]
  ]
Let Variable [ Name=$tokensCSX ]
  :=
  (
    SELECT ELEMENT [
    Variable [ Name=$i ]
    ]
    FROM [      Variable [ Name=$unrankedTokensCSX ]
      AS Variable [ Name=$token ]
,
      (
        SELECT ELEMENT [
        FieldAccessor [
          Variable [ Name=$paper ]
          Field=title
        ]
        ]
        FROM [          FunctionCall Metadata.dataset@1[
            LiteralExpr [STRING] [DBLP]
          ]
          AS Variable [ Name=$paper ]
        ]
      )
      AS Variable [ Name=$tokenRanked ]
 AT 
Variable [ Name=$i ]
    ]
    Where
      OperatorExpr [
        Variable [ Name=$token ]
        =
        Variable [ Name=$tokenRanked ]
      ]
    Orderby
      Variable [ Name=$i ]
      ASC

  )
Where
  OperatorExpr [
    Variable [ Name=$prefixTokenDBLP ]
    =
    Variable [ Name=$prefixTokenCSX ]
  ]
Groupby
  Variable [ Name=$idDBLP ]
  :=
  Variable [ Name=$idDBLP ]
  Variable [ Name=$idCSX ]
  :=
  Variable [ Name=$idCSX ]
  GROUP AS Variable [ Name=#1 ]
  (
    paperDBLP:=Variable [ Name=$paperDBLP ]
    prefixTokenDBLP:=Variable [ Name=$prefixTokenDBLP ]
    paperCSX:=Variable [ Name=$paperCSX ]
    prefixTokenCSX:=Variable [ Name=$prefixTokenCSX ]
  )

Orderby
  Variable [ Name=$idDBLP ]
  ASC
  Variable [ Name=$idCSX ]
  ASC

