/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

drop dataverse test if exists;
create dataverse test;
use dataverse test;

create type AuxiliaryType as open {
  id:int32,
  num:int32
}

create type LineType as open {
}

create dataset Book(LineType) with meta(AuxiliaryType)
primary key meta().id;

create index NumIndex1 on Book(meta().num);
create index NumIndex2 on Book(linenum:int32?) enforced;
create index NumIndex3 on Book(count1:int32?) enforced;
create index NumIndex4 on Book(count2:int32?) enforced;

for $t1 in dataset Book
where $t1.linenum < 10
order by $t1.linenum
return {
"linenum1": $t1.linenum,
"count1":$t1.count1,
"t2info": for $t2 in dataset Book
          where $t1.count1 /* +indexnl */= $t2.count2
          order by $t2.linenum
          return {"linenum2": $t2.linenum,
                  "count2":$t2.count2}
};
