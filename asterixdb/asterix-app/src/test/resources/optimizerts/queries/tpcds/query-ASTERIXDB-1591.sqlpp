/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */



drop dataverse tpcds if exists;
create dataverse tpcds;

use tpcds;

create type customer_address_type as closed {
    ca_address_sk:              int64,
    ca_address_id:              string,
    ca_street_number:           string?,
    ca_street_name:             string?,
    ca_street_type:             string?,
    ca_suite_number:            string?,
    ca_city:                    string?,
    ca_county:                  string?,
    ca_state:                   string?,
    ca_zip:                     string?,
    ca_country:                 string?,
    ca_gmt_offset:              double?,
    ca_location_type:           string?
}

create type customer_type as closed {
    c_customer_sk:             int64,
    c_customer_id:             string,
    c_current_cdemo_sk:        int64?,
    c_current_hdemo_sk:        int64?,
    c_current_addr_sk:         int64?,
    c_first_shipto_date_sk:    int64?,
    c_first_sales_date_sk:     int64?,
    c_salutation:              string?,
    c_first_name:              string?,
    c_last_name:               string?,
    c_preferred_cust_flag:     string?,
    c_birth_day:               int64?,
    c_birth_month:             int64?,
    c_birth_year:              int64?,
    c_birth_country:           string?,
    c_login:                   string?,
    c_email_address:           string?,
    c_last_review_date:        string?
}

create type store_sales_type as closed {
    ss_sold_date_sk:           int64?,
    ss_sold_time_sk:           int64?,
    ss_item_sk:                int64,
    ss_customer_sk:            int64?,
    ss_cdemo_sk:               int64?,
    ss_hdemo_sk:               int64?,
    ss_addr_sk:                int64?,
    ss_store_sk:               int64?,
    ss_promo_sk:               int64?,
    ss_ticket_number:          int64,
    ss_quantity:               int64?,
    ss_wholesale_cost:         double?,
    ss_list_price:             double?,
    ss_sales_price:            double?,
    ss_ext_discount_amt:       double?,
    ss_ext_sales_price:        double?,
    ss_ext_wholesale_cost:     double?,
    ss_ext_list_price:         double?,
    ss_ext_tax:                double?,
    ss_coupon_amt:             double?,
    ss_net_paid:               double?,
    ss_net_paid_inc_tax:       double?,
    ss_net_profit:             double?
}

create type catalog_sales_type as closed {
    cs_sold_date_sk:           int64?,
    cs_sold_time_sk:           int64?,
    cs_ship_date_sk:           int64?,
    cs_bill_customer_sk:       int64?,
    cs_bill_cdemo_sk:          int64?,
    cs_bill_hdemo_sk:          int64?,
    cs_bill_addr_sk:           int64?,
    cs_ship_customer_sk:       int64?,
    cs_ship_cdemo_sk:          int64?,
    cs_ship_hdemo_sk:          int64?,
    cs_ship_addr_sk:           int64?,
    cs_call_center_sk:         int64?,
    cs_catalog_page_sk:        int64?,
    cs_ship_mode_sk:           int64?,
    cs_warehouse_sk:           int64?,
    cs_item_sk:                int64,
    cs_promo_sk:               int64?,
    cs_order_number:           int64,
    cs_quantity:               int64?,
    cs_wholesale_cost:         double?,
    cs_list_price:             double?,
    cs_sales_price:            double?,
    cs_ext_discount_amt:       double?,
    cs_ext_sales_price:        double?,
    cs_ext_wholesale_cost:     double?,
    cs_ext_list_price:         double?,
    cs_ext_tax:                double?,
    cs_coupon_amt:             double?,
    cs_ext_ship_cost:          double?,
    cs_net_paid:               double?,
    cs_net_paid_inc_tax:       double?,
    cs_net_paid_inc_ship:      double?,
    cs_net_paid_inc_ship_tax:  double?,
    cs_net_profit:             double?
}

create type catalog_returns_type as closed {
    cr_returned_date_sk:       int64?,
    cr_returned_time_sk:       int64?,
    cr_item_sk:                int64,
    cr_refunded_customer_sk:   int64?,
    cr_refunded_cdemo_sk:      int64?,
    cr_refunded_hdemo_sk:      int64?,
    cr_refunded_addr_sk:       int64?,
    cr_returning_customer_sk:  int64?,
    cr_returning_cdemo_sk:     int64?,
    cr_returning_hdemo_sk:     int64?,
    cr_returning_addr_sk:      int64?,
    cr_call_center_sk:         int64?,
    cr_catalog_page_sk:        int64?,
    cr_ship_mode_sk:           int64?,
    cr_warehouse_sk:           int64?,
    cr_reason_sk:              int64?,
    cr_order_number:           int64,
    cr_return_quantity:        int64?,
    cr_return_amount:          double?,
    cr_return_tax:             double?,
    cr_return_amt_inc_tax:     double?,
    cr_fee:                    double?,
    cr_return_ship_cost:       double?,
    cr_refunded_cash:          double?,
    cr_reversed_charge:        double?,
    cr_store_credit:           double?,
    cr_net_loss:               double?
}

create type tpcds.date_dim_type as closed {
    d_date_sk:                 int64,
    d_date_id:                 string,
    d_date:                    string? ,
    d_month_seq:               int64?,
    d_week_seq:                int64?,
    d_quarter_seq:             int64?,
    d_year:                    int64?,
    d_dow:                     int64?,
    d_moy:                     int64?,
    d_dom:                     int64?,
    d_qoy:                     int64?,
    d_fy_year:                 int64?,
    d_fy_quarter_seq:          int64?,
    d_fy_week_seq:             int64?,
    d_day_name:                string?,
    d_quarter_name:            string?,
    d_holiday:                 string?,
    d_weekend:                 string?,
    d_following_holiday:       string?,
    d_first_dom:               int64?,
    d_last_dom:                int64?,
    d_same_day_ly:             int64?,
    d_same_day_lq:             int64?,
    d_current_day:             string?,
    d_current_week:            string?,
    d_current_month:           string?,
    d_current_quarter:         string?,
    d_current_year:            string?
}

create type item_type as closed {
    i_item_sk:                 int64,
    i_item_id:                 string,
    i_rec_start_date:          string?,
    i_rec_end_date:            string?,
    i_item_desc:               string?,
    i_current_price:           double?,
    i_wholesale_cost:          double?,
    i_brand_id:                int64? ,
    i_brand:                   string?,
    i_class_id:                int64? ,
    i_class:                   string?,
    i_category_id:             int64? ,
    i_category:                string?,
    i_manufact_id:             int64? ,
    i_manufact:                string?,
    i_size:                    string?,
    i_formulation:             string?,
    i_color:                   string?,
    i_units:                   string?,
    i_container:               string?,
    i_manager_id:              int64?,
    i_product_name:            string?
}

create type web_sales_type as closed {
    ws_sold_date_sk:           int64?,
    ws_sold_time_sk:           int64?,
    ws_ship_date_sk:           int64?,
    ws_item_sk:                int64,
    ws_bill_customer_sk:       int64?,
    ws_bill_cdemo_sk:          int64?,
    ws_bill_hdemo_sk:          int64?,
    ws_bill_addr_sk:           int64?,
    ws_ship_customer_sk:       int64?,
    ws_ship_cdemo_sk:          int64?,
    ws_ship_hdemo_sk:          int64?,
    ws_ship_addr_sk:           int64?,
    ws_web_page_sk:            int64?,
    ws_web_site_sk:            int64?,
    ws_ship_mode_sk:           int64?,
    ws_warehouse_sk:           int64?,
    ws_promo_sk:               int64?,
    ws_order_number:           int64,
    ws_quantity:               int64?,
    ws_wholesale_cost:         double?,
    ws_list_price:             double?,
    ws_sales_price:            double?,
    ws_ext_discount_amt:       double?,
    ws_ext_sales_price:        double?,
    ws_ext_wholesale_cost:     double?,
    ws_ext_list_price:         double?,
    ws_ext_tax:                double?,
    ws_coupon_amt:             double?,
    ws_ext_ship_cost:          double?,
    ws_net_paid:               double?,
    ws_net_paid_inc_tax:       double?,
    ws_net_paid_inc_ship:      double?,
    ws_net_paid_inc_ship_tax:  double?,
    ws_net_profit:             double?
}

create dataset customer (customer_type)
primary key c_customer_sk;

create dataset store_sales (store_sales_type)
primary key ss_item_sk, ss_ticket_number;

create dataset customer_address(customer_address_type)
primary key ca_address_sk;

create dataset catalog_sales (catalog_sales_type)
primary key cs_item_sk, cs_order_number;

create dataset catalog_returns (catalog_returns_type)
primary key cr_item_sk, cr_order_number;

create dataset item (item_type)
primary key i_item_sk;

create dataset date_dim(date_dim_type)
primary key d_date_sk;

create dataset web_sales (web_sales_type)
primary key ws_item_sk, ws_order_number;

select *
from
  customer c,customer_address ca
where
  c.c_current_addr_sk = ca.ca_address_sk and
  exists (select *
          from store_sales ss1,date_dim dd1
          where c.c_customer_sk = ss1.ss_customer_sk and
                ss1.ss_sold_date_sk = dd1.d_date_sk and
                dd1.d_year = 1900 and
                dd1.d_qoy < 4)
                and
                (
                  exists (select *
                          from web_sales ws1,date_dim dd1
                          where c.c_customer_sk = ws1.ws_bill_customer_sk and
                                ws1.ws_sold_date_sk = dd1.d_date_sk and
                                dd1.d_year = 1900 and
                                dd1.d_qoy < 4
                         )
                  or
                  exists (select *
                          from catalog_sales cs1,date_dim dd1
                          where c.c_customer_sk = cs1.cs_ship_customer_sk and
                                cs1.cs_sold_date_sk = dd1.d_date_sk and
                                dd1.d_year = 1900 and
                                dd1.d_qoy < 4
                         )
                 )
order by c.c_customer_sk
limit 100;

drop dataverse tpcds;
