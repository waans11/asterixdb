/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 * Description    : Tests that the exception in ASTERIDXDB-1727 issue is not reproduced.
 *                  Because of the current limitation of the system (see the generateMergeAggregationExpressions
                    method of the SetAlgebricksPhysicalOperatorsRule class for more details.), hash hint will be
                    ignored.
 * Success        : Yes
 */

let $customer := {{ {"cid" : 1}, {"cid" : 2} }}

let $orders := {{
  {"oid": 100,
  "ocid" : 1,
  "priority" : 10,
   "class" : "A",
   "items" : [{"price" : 1000}, { "price" : 2000}]
  },
  {"oid": 200,
  "ocid" : 2,
  "priority" : 20,
   "class" : "A",
   "items" : [{"price" : 2000}, {"price" : 3000}]
  }
}}

for $c in $customer
for $o in $orders
where
  $c.cid = $o.ocid
for $i in $o.items
/*+ hash */
group by $o_orderid := $o.oid, $o_class := $o.class, $o_priority := $o.priority
  with $i
let $price := sum (
  for $t in $i
  return
    $t.price
)
order by $price desc, $o_class
return {
  "o_orderkey": $o_orderid,
  "price": $price,
  "o_class": $o_class,
  "o_priority": $o_priority
}
